{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","developer","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","key","id","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","class","src","poster_path","backdrop_path","alt","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf0a3fae.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","import React, { useState, useEffect } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport axios from './axios';\r\nimport './Row.css';\r\nimport movieTrailer from \"movie-trailer\";\r\nconst base_url = 'https://image.tmdb.org/t/p/original/';\r\n\r\nfunction Row({ title, developer, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState('');\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const opts = {\r\n    height: '390',\r\n    width: '100%',\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n\r\nconst handleClick = (movie) => {\r\n    if (trailerUrl){\r\n        setTrailerUrl('')\r\n    } else {\r\n        movieTrailer(movie?.name|| \"\")\r\n        .then((url) => {\r\n\r\n            const urlParams = new  URLSearchParams(new URL(url).search);\r\n            setTrailerUrl(urlParams.get(\"v\"));\r\n\r\n        }) .catch((error) => console.log(error));\r\n    }\r\n}\r\n\r\n  //console.table(movies);\r\n  return (\r\n    <div className='row'>\r\n      <h2> {title} </h2>\r\n      <small>{developer}</small>\r\n      <div className='row__posters'>\r\n        {/*serval row poster(s) */}\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            class={`row__poster ${isLargeRow && 'row__posterLarge'}`}\r\n            src={`${base_url}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY = \"fbbb70ebbc541fdfc9ea1731d01ee1b1\";\r\n\r\nconst requests = {\r\n// fetchTrending : `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n// fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n// fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n// fetchActionMovies: `/discover/moview`\r\n\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n\tfetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=213`,\r\n\tfetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n\tfetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n\tfetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n\tfetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n\tfetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n\tfetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\r\n};\r\n\r\nexport default requests;","import React , {useState , useEffect} from 'react';\r\nimport axios from './axios';\r\nimport requests  from './requests';\r\nimport  './Banner.css';\r\nfunction Banner() {\r\nconst [movie, setMovie] = useState([]);\r\n\r\nuseEffect(() => {\r\n    async function fetchData(){\r\n    const request = await axios.get (requests.fetchNetflixOriginals);\r\n     setMovie (\r\n         request.data.results[\r\n             Math.floor(Math.random() * request.data.results.length-1)\r\n         ]\r\n     )   \r\n}\r\n    fetchData();\r\n}, [])\r\n\r\nfunction truncate (str , n) {\r\nreturn str?.length > n ? str.substr(0, n-1) + \"...\" : str;\r\n}\r\n\r\n    return (\r\n        <header className=\"banner\" \r\n        style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n            backgroundPosition: \"center center\",\r\n        }}\r\n        >\r\n            <div className=\"banner__contents\">\r\n\r\n           \r\n            {/* title */}\r\n         <h1 className=\"banner__title\">{movie?.title || movie?.name || movie?.original_name}</h1>\r\n            {/* div >2 > buu=ttons */}\r\n\r\n            <div className=\"banner__buttons\">\r\n             <button className=\"banner__button\">Play</button>\r\n            <button className=\"banner__button\">MyList</button>\r\n\r\n            <h1 className=\"banner__description\">\r\n                { truncate (movie?.overview , 150)}</h1>\r\n            {/* description */}\r\n           </div>\r\n         </div>\r\n\r\n<div className=\"banner--fadebottom\"></div>\r\n\r\n         </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React , {useState ,useEffect} from 'react';\r\nimport './Nav.css';\r\n\r\nfunction Nav() {\r\n   const [show, handleShow] = useState(false) \r\n    \r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if (window.scrollY > 100) { \r\n                handleShow(true);\r\n            }else{\r\n                handleShow(false);\r\n            }\r\n        });\r\n        return () => {\r\n           window.removeEventListener(\"scroll\");\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav__black\"}`}>\r\n            <img \r\n            className=\"nav__logo\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/170px-Netflix_2015_logo.svg.png\" alt=\"Netflix Logo\"/>\r\n           \r\n            <img \r\n            className=\"nav__avatar\"\r\n            src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\r\n            alt=\"Netflix Logo\"\r\n            />\r\n     </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\nimport './App.css';\nimport  Row from './Row';\nimport requests from './requests';\nimport  Banner from './Banner';\nimport  Nav from './Nav';\n\n\nfunction App() {\n  return (\n    <div className=\"app\">\n     \n  \n     <Nav />\n     <Banner />\n     <Row \n      title=\"NETFLIX ORIGINAL\"\n      developer=\"Developed by P.Sonali\"\n       fetchUrl={requests.fetchNetflixOriginals}\n       isLargeRow // default {true}\n       />\n     \n     <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n     <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n     <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n     <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n     <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n     <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n     <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n      \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}